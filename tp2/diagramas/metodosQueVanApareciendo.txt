******Controlador de Ingreso******

ingresar(pedido):void


******controlador de preIngreso******

ingresar(pedido):void
verificarPreparable(pedido):bool
verificarCocinable(pedido):bool



******Coordinador de pedidos******

ingresarPedido(cliente, MultiSet<pedido>, origen):pedido
agregarPedidoListo(pedido):void
+despachar(pedido) void
+IngresarPedidoAEntregar(pedido) void
+cerrarMesa(int) void
+agregarPedidoMesa(Pedido) : void
+cerrarMesa(int mesa, string formaDePago)       ///cambiar esto en el diagrama!


******Generador de pedido******

generarPedido(cliente, MultiSet<pedido>, origen):pedido


******PedidoRemoto******

setEstado(estado):void


******controlador de listos******
+despachar(pedido) void
-lista: List<Pedido>             //lista de los pedidos listos
#notify() : void

******pedido******
+setEstado(Estado) void
+getMesa() int         //para pedidos de mesa
+setFormaDePago(string) void
+getProductos() : multiSet<Producto>

******controlador de entregas******
+IngresarPedidoAEntregar(pedido) void
-AgregarAPedidosEnCamino(pedido) void

******controlador pedidos mesa******
cerrarMesa(int) void
+agregarPedidoMesa(Pedido) : void
+cerrarMesa(int mesa, string formaDePago)              ///cambiar esto en el diagrama!!


******controlador de ingreso******
listar(void) list<Pedido>
subir(Pedido) void
bajar(pedido) void
buscarPedidoEnColayBajar(Pedido) void
buscarPedidoEnColaySubir(Pedido) void

****despachador de preparacion standard****
+partePreparada(Pedido) : void


****Producto****
+getTiempoPreparacion() : int
+getTiempoCoccion() : int
+getTipo() : TipoProducto

***EstimadorDeTiempos***
#estimarTiempoDePreparacion(Pedido) : int
#estimarTiempoDeCoccionPizzas(Pedido) : int
#estimarTiempoDeCoccionEmpanadas(Pedido) : int

***fraccionador de horno***
+getCantModulos() : int
+getProductoPorModulo(tipoPizza) : int
+getProductoPorModulo(tipoEmpanada) : int
